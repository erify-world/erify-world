name: ðŸ§­ Triage

on:
  pull_request_target:
    types: [opened, reopened, ready_for_review, synchronize]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  pr-triage:
    # Skip drafts and common bots
    if: >
      github.event.pull_request.draft == false &&
      !contains(fromJson('["dependabot[bot]","github-actions[bot]"]'),
                github.event.pull_request.user.login)
    runs-on: ubuntu-latest
    steps:
      - name: Ensure `needs-review` label exists
        uses: actions/github-script@v7
        with:
          script: |
            const label = 'needs-review';
            try {
              await github.rest.issues.getLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: label
              });
            } catch (e) {
              if (e.status === 404) {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label,
                  color: '0e8a16',
                  description: 'PR awaiting review'
                });
              } else {
                core.warning(`Could not verify/create label: ${e.message}`);
              }
            }

      - name: Add `needs-review` label
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: ['needs-review']
              });
            } catch (e) {
              core.warning(`Label skipped: ${e.message}`);
            }

      - name: Assign to @erify-world
        uses: actions/github-script@v7
        with:
          script: |
            const assignee = 'erify-world';
            const pr = context.payload.pull_request;
            const already = (pr.assignees || []).some(a => a.login === assignee);
            if (!already) {
              try {
                await github.rest.issues.addAssignees({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  assignees: [assignee]
                });
              } catch (e) {
                core.warning(`Assign skipped: ${e.message}`);
              }
            }