#!/bin/bash
# Test script to validate the ERIFY Stream Workflow

set -euo pipefail

echo "üß™ Testing ERIFY Stream Workflow..."

# Test 1: Validate YAML syntax
echo "1. Validating YAML syntax..."
python3 -c "import yaml; yaml.safe_load(open('.github/workflows/stream-upload-and-announce.yml'))"
echo "‚úÖ YAML syntax is valid"

# Test 2: Check required components
echo "2. Checking required components..."

WORKFLOW_FILE=".github/workflows/stream-upload-and-announce.yml"

# Check for modern Node.js setup
if grep -q "actions/setup-node@v4" "$WORKFLOW_FILE"; then
    echo "‚úÖ Modern Node.js setup found"
else
    echo "‚ùå Modern Node.js setup missing"
    exit 1
fi

# Check for fail-fast safety
FAIL_FAST_COUNT=$(grep -c "set -euo pipefail" "$WORKFLOW_FILE")
if [ "$FAIL_FAST_COUNT" -ge 8 ]; then
    echo "‚úÖ Fail-fast safety implemented ($FAIL_FAST_COUNT instances)"
else
    echo "‚ùå Insufficient fail-fast safety implementations"
    exit 1
fi

# Check for signing key validation
if grep -q "CF_STREAM_SIGNING_KEY" "$WORKFLOW_FILE"; then
    echo "‚úÖ Signing key validation found"
else
    echo "‚ùå Signing key validation missing"
    exit 1
fi

# Check for webhook validation
if grep -q "webhooks_configured" "$WORKFLOW_FILE"; then
    echo "‚úÖ Webhook validation found"
else
    echo "‚ùå Webhook validation missing"
    exit 1
fi

# Check for Teams card fallback
if grep -q "1\.4.*1\.2" "$WORKFLOW_FILE"; then
    echo "‚úÖ Teams card version fallback found"
else
    echo "‚ùå Teams card version fallback missing"
    exit 1
fi

# Check for iframe token separation
if grep -q "iframe?token=\${jwtToken}" "$WORKFLOW_FILE"; then
    echo "‚úÖ Iframe token handling properly implemented"
else
    echo "‚ùå Iframe token handling not properly implemented"
    exit 1
fi

# Test 3: Check all notification platforms
echo "3. Checking notification platforms..."
if grep -q "notify-slack" "$WORKFLOW_FILE" && 
   grep -q "notify-discord" "$WORKFLOW_FILE" && 
   grep -q "notify-teams" "$WORKFLOW_FILE"; then
    echo "‚úÖ All notification platforms found (Slack, Discord, Teams)"
else
    echo "‚ùå Missing notification platforms"
    exit 1
fi

# Test 4: Check ERIFY branding
echo "4. Checking ERIFY branding..."
if grep -q "ERIFY‚Ñ¢" "$WORKFLOW_FILE" && 
   grep -q "erifyworldwide.com" "$WORKFLOW_FILE"; then
    echo "‚úÖ ERIFY branding found"
else
    echo "‚ùå ERIFY branding missing"
    exit 1
fi

echo ""
echo "üéâ All tests passed! The ERIFY Stream Workflow is properly configured."
echo ""
echo "Summary of implemented features:"
echo "‚úÖ Modern Node.js setup with actions/setup-node@v4"
echo "‚úÖ Fail-fast safety with set -euo pipefail in all scripts"
echo "‚úÖ Signed URL requirement check for CF_STREAM_SIGNING_KEY"
echo "‚úÖ Proper iframe token handling (JWT only, not full HLS URL)"
echo "‚úÖ Teams card version fallback from 1.4 to 1.2"
echo "‚úÖ Webhook validation to skip announcements if no secrets"
echo "‚úÖ Slack, Discord, and Teams notifications with ERIFY‚Ñ¢ branding"
echo "‚úÖ Comprehensive error handling and conditional execution"